/*
 * Copyright 2012-2013 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def v = [
        guava: '15.0',
        slf4j: '1.6.6',
        servletApi: '2.5',
        jetty: '9.2.2.v20140723',
        jdt: '3.8.2.v20130121',
        spock: '0.6-groovy-1.8'
]

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:0.3"
    }
}

apply plugin: 'bintray'
apply plugin: 'groovy'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile     localGroovy()
    compile     gradleApi()
    compile     group: 'com.google.guava', name: 'guava', version: v.guava
    compile     group: 'org.slf4j', name: 'slf4j-api', version: v.slf4j
    compile     group: 'org.eclipse.jetty', name: 'jetty-webapp',version: v.jetty
    compile     group: 'org.eclipse.jetty', name: 'jetty-plus', version: v.jetty
    runtime     group: 'org.eclipse.jetty', name: 'jetty-jsp', version: v.jetty
    compile     group: 'org.eclipse.jetty', name: 'jetty-annotations', version: v.jetty
    testCompile group: 'org.spockframework', name: 'spock-core', version: v.spock
}

task wrapper(type: Wrapper, description: 'Gradle Wrapper task') {
    gradleVersion = '1.12'
}

compileJava {
    // this is a pain in the neck on mac osx *sight*
    // Apple put the rt.jar into a jar called classes.jar
    // From 1.7 Oracle took over and the standard rt.jar is available
    // please define the following entries in your gradle.properties file in ${user.home}/.gradle/gradle.properties
    // examples from my mac
    //
    // jdk_1_6_home=/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents
    // jdk_1_6_bootClasspath=/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar
    //
    // on a linux system this would be eg.
    // jdk_1_6_home=/opt/java/64/jdk1.6.0_31
    // jdk_1_6_bootClasspath=/opt/java/64/jdk1.6.0_31/jre/lib/rt.jar
    def compatibilityVersion = 1.7
    sourceCompatibility = compatibilityVersion
    targetCompatibility = compatibilityVersion
    if(project.hasProperty('jdk_1_7_bootClasspath'))
        options.bootClasspath = "${jdk_1_7_bootClasspath}"
    else if(project.hasProperty('jdk_1_7_home'))
        options.bootClasspath = "${jdk_1_7_home}/jre/lib/rt.jar"
    logger.info "Compiling using compatibility $compatibilityVersion and bootClasspath ${options.bootClasspath}"
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    scm {
        url "https://github.com/Khoulaiz/gradle-jetty-eclipse-plugin"
    }
    developers {
        developer {
            id "khoulaiz"
            name "Andreas Sahlbach"
            roles {
                role 'Developer' // might be 'Contributor' for contributors
            }
        }
    }
}

// creates the sources.jar
task('sourcesJar', type: Jar, dependsOn: 'classes') {
    classifier = 'sources'
    from sourceSets.main.groovy
}

// creates the groovydoc.jar
task('groovydocJar', type: Jar, dependsOn: 'groovydoc') {
    classifier = 'groovydoc'
    from groovydoc.destinationDir
}

// Set up gradle to upload source and javadoc jars.
artifacts {
    archives sourcesJar
    archives groovydocJar
}

publishing {
    publications {
        mavenGroovy(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact groovydocJar {
                classifier "groovydoc"
            }
            pom.withXml {
                def root = asNode()
                root.with {
                    appendNode('description', 'A Gradle Jetty plugin for Eclipse Jetty')
                    appendNode('url', 'https://github.com/Khoulaiz/gradle-jetty-eclipse-plugin')
                    appendNode('inceptionYear', '2013')
                }
                root.children().last() + pomConfig
            }
        }
    }
//    generatePomFileForMavenGroovyPublication {
//        destination = file("$buildDir/generated-pom.xml")
//    }
}

task install(dependsOn: 'publishMavenGroovyPublicationToMavenLocal') << {
    logger.info "Installing $project.name"
}

test {
    dependsOn install
}

bintray {
    user = 'khoulaiz'
    // ${USER.HOME}/gradle.properties contains my secret entry bintray.key=...
    key = bintrayKey
    publications = ['mavenGroovy']
    pkg {
        repo = 'gradle-plugins'
        name = "gradle-jetty-eclipse-plugin"
        licenses = ['Apache-2.0']
    }
}
